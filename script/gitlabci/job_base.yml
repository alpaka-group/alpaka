.base:
  variables:
    ALPAKA_DEBUG: 0
    ALPAKA_CI_BOOST_BRANCH: "boost-${ALPAKA_BOOST_VERSION}"
    BOOST_LIBRARYDIR: "/opt/boost/${ALPAKA_BOOST_VERSION}/lib"
    ALPAKA_CI_OS_NAME: "Linux"
    # $CI_CPUS is defined by the HZDR gitlab CI
    ALPAKA_CI_BUILD_JOBS: "$CI_CPUS"
    OMP_NUM_THREADS: "$CI_CPUS"
  script:
    - source ./script/before_install.sh
    - source ./script/install.sh
    - source ./script/run.sh
  interruptible: true

# ------ CUDA gcc ------
.basecfg_cuda_gcc:
  image: ubuntu:${ALPAKA_CI_UBUNTU_VER}
  variables:
    ALPAKA_CI_UBUNTU_VER: "20.04"
    CC: gcc
    CXX: g++
    ALPAKA_ACC_CPU_B_SEQ_T_THREADS_ENABLE: "ON"
    ALPAKA_ACC_CPU_B_OMP2_T_SEQ_ENABLE: "ON"
    ALPAKA_ACC_CPU_B_SEQ_T_OMP2_ENABLE: "OFF"
    ALPAKA_ACC_GPU_CUDA_ENABLE: "ON"
    ALPAKA_ACC_CPU_B_SEQ_T_FIBERS_ENABLE: "OFF"
    CMAKE_CUDA_COMPILER: nvcc
    ALPAKA_CI_STDLIB: libstdc++
    # CI contains a Quadro P5000 (sm_61)
    CMAKE_CUDA_ARCHITECTURES: "61"
    CMAKE_BUILD_TYPE: Release
  extends: .base


.base_cuda_gcc_compile_only:
  extends: .basecfg_cuda_gcc
  variables:
    ALPAKA_CI_RUN_TESTS: "OFF"
  tags:
    - cpuonly
    - x86_64

.base_cuda_gcc:
  extends: .basecfg_cuda_gcc
  tags:
    - cuda
    - intel

# ------ CUDA clang ------
.basecfg_cuda_clang:
  image: ubuntu:${ALPAKA_CI_UBUNTU_VER}
  variables:
    ALPAKA_CI_UBUNTU_VER: "20.04"
    CC: clang
    CXX: clang++
    ALPAKA_ACC_CPU_B_SEQ_T_THREADS_ENABLE: "ON"
    ALPAKA_ACC_CPU_B_OMP2_T_SEQ_ENABLE: "ON"
    ALPAKA_ACC_CPU_B_SEQ_T_OMP2_ENABLE: "OFF"
    ALPAKA_ACC_GPU_CUDA_ENABLE: "ON"
    ALPAKA_ACC_CPU_B_SEQ_T_FIBERS_ENABLE: "OFF"
    CMAKE_CUDA_COMPILER: clang++
    ALPAKA_CI_STDLIB: libstdc++
    # CI contains a Quadro P5000 (sm_61)
    CMAKE_CUDA_ARCHITECTURES: "61"
    CMAKE_BUILD_TYPE: Release
  extends: .base
  tags:
    - cuda
    - intel

.base_cuda_clang_compile_only:
  extends: .basecfg_cuda_clang
  variables:
    ALPAKA_CI_RUN_TESTS: "OFF"
  tags:
    - cpuonly
    - x86_64

.base_cuda_clang:
  extends: .basecfg_cuda_clang
  tags:
    - cuda
    - intel

.base_oacc_nvhpc:
  image: nvcr.io/nvidia/nvhpc:${ALPAKA_CI_NVHPC_VER}-devel-cuda${ALPAKA_CI_CUDA_VERSION}-ubuntu${ALPAKA_CI_UBUNTU_VER}
  extends: .base
  variables:
    ALPAKA_CI_UBUNTU_VER: "20.04"
    ALPAKA_CI_STDLIB: libstdc++
    # gcc is used to compile the dependencies, NVHPC will be used to compile alpaka
    CC: gcc
    CXX: g++
    ALPAKA_CI_GCC_VER: 9
    CMAKE_C_COMPILER: nvc
    CMAKE_CXX_COMPILER: nvc++
    ALPAKA_ACC_CPU_B_SEQ_T_SEQ_ENABLE: "ON"
    ALPAKA_ACC_CPU_B_SEQ_T_THREADS_ENABLE: "OFF"
    ALPAKA_ACC_CPU_B_OMP2_T_SEQ_ENABLE: "OFF"
    ALPAKA_ACC_CPU_B_SEQ_T_OMP2_ENABLE: "OFF"
    ALPAKA_ACC_GPU_CUDA_ENABLE: "OFF"
    ALPAKA_ACC_CPU_B_SEQ_T_FIBERS_ENABLE: "OFF"
    ALPAKA_ACC_ANY_BT_OACC_ENABLE: "ON"
    ALPAKA_OFFLOAD_MAX_BLOCK_SIZE: 256
    ALPAKA_DEBUG_OFFLOAD_ASSUME_HOST: "OFF"
    CMAKE_CXX_FLAGS: "-acc -ta=tesla"
  tags:
    - cuda
    - intel
    
.base_hip:
  image: rocm/dev-ubuntu-${ALPAKA_CI_UBUNTU_VER}:${ALPAKA_CI_HIP_VERSION}
  variables:
    ALPAKA_CI_UBUNTU_VER: "20.04"
    CC: clang
    CXX: clang++
    ALPAKA_ACC_CPU_B_SEQ_T_THREADS_ENABLE: "OFF"
    ALPAKA_ACC_CPU_B_OMP2_T_SEQ_ENABLE: "OFF"
    ALPAKA_ACC_CPU_B_SEQ_T_OMP2_ENABLE: "OFF"
    ALPAKA_ACC_GPU_HIP_ENABLE: "ON"
    ALPAKA_ACC_CPU_B_SEQ_T_FIBERS_ENABLE: "OFF"
    # compile for VEGA64 GPU
    GPU_TARGETS: gfx900
  before_script:
    - apt-get -y --quiet update || echo "ignore any errors"
    - apt-get -y --quiet install wget gnupg2
    # AMD container keys are outdated and must be updated
    - wget -q -O - https://repo.radeon.com/rocm/rocm.gpg.key | sudo apt-key add -
  extends: .base
  tags:
    - amd
    - rocm
