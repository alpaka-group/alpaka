#
# Copyright 2022 Benjamin Worpitz, Bernhard Manfred Gruber, Jan Stephan
#
# This file is part of alpaka.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#

name: Continuous Integration

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

################################################################################
# NOTE: Testing the full matrix is not practical.
# Therefore we aim to have each value been set in at lest one job.
# CXX                                           : {g++, clang++}
#   [g++] ALPAKA_CI_GCC_VER                     : {7, 8, 9, 10, 11, 12}
#   [clang++] ALPAKA_CI_CLANG_VER               : {6.0, 7, 8, 9, 10, 11, 12}
#   [cl.exe] ALPAKA_CI_CL_VER                   : {2019, 2022}
#   ALPAKA_CI_STDLIB                            : {libstdc++, [CXX==clang++]:libc++}
# CMAKE_BUILD_TYPE                              : {Debug, Release}
# alpaka_CI                                     : {GITHUB}
# ALPAKA_CI_DOCKER_BASE_IMAGE_NAME              : {ubuntu:18.04, ubuntu:20.04, ubuntu:22.04}
# ALPAKA_CI_BOOST_BRANCH                        : {boost-1.74.0, boost-1.75.0, boost-1.76.0, boost-1.77.0, boost-1.78.0, boost-1.79.0}
# ALPAKA_CI_CMAKE_VER                           : {3.18.6, 3.19.8, 3.20.6, 3.21.6, 3.22.3, 3.23.2}
# ALPAKA_CI_XCODE_VER                           : {13.2.1, 13.4.1}
# ALPAKA_CI_SANITIZERS                          : {ASan, UBsan, TSan}
#    TSan is not currently used because it produces many unexpected errors
# ALPAKA_CI_ANALYSIS                            : {ON, OFF}
# alpaka_DEBUG                                  : {0, 1, 2}
# alpaka_ACC_GPU_CUDA_ONLY_MODE                 : {ON, OFF}
# alpaka_ACC_GPU_HIP_ONLY_MODE                  : {ON, OFF}
# alpaka_ACC_CPU_B_SEQ_T_SEQ_ENABLE             : {ON, OFF}
# alpaka_ACC_CPU_B_SEQ_T_THREADS_ENABLE         : {ON, OFF}
# alpaka_ACC_CPU_B_SEQ_T_FIBERS_ENABLE          : {ON, OFF}
# alpaka_ACC_CPU_B_OMP2_T_SEQ_ENABLE            : {ON, OFF}
#   [ON] OMP_NUM_THREADS                        : {1, 2, 3, 4}
# alpaka_ACC_CPU_B_SEQ_T_OMP2_ENABLE            : {ON, OFF}
#   [ON] OMP_NUM_THREADS                        : {1, 2, 3, 4}
# alpaka_ACC_ANY_BT_OMP5_ENABLE                 : {ON, OFF}
#   [ON] OMP_NUM_THREADS                        : {1, 2, 3, 4}
# alpaka_ACC_GPU_CUDA_ENABLE                    : {ON, OFF}
#   [ON] ALPAKA_CI_CUDA_VERSION                 : {11.0, 11.1, 11.2, 11.3, 11.4, 11.5, 11.6}
#   [ON] CMAKE_CUDA_COMPILER                    : {nvcc, [CXX==clang++]:clang++}
# alpaka_ACC_CPU_B_TBB_T_SEQ_ENABLE             : {ON, OFF}
# alpaka_ACC_GPU_HIP_ENABLE                     : {ON, OFF}
#   [ON] ALPAKA_CI_HIP_BRANCH                   : {rocm-4.2}

# if you add/remove any CI variable, also update docker_ci.sh
env:
  alpaka_CI: GITHUB
  ALPAKA_CI_BUILD_JOBS: 2
  TBB_ROOT: ${{ github.workspace }}/tbb
  BOOST_ROOT: ${{ github.workspace }}/boost
  ALPAKA_CI_BOOST_LIB_DIR: ${{ github.workspace }}/boost_libs
  ALPAKA_CI_CMAKE_DIR: ${{ github.workspace }}/CMake
  ALPAKA_CI_CUDA_DIR: ${{ github.workspace }}/CUDA
  ALPAKA_CI_HIP_ROOT_DIR: ${{ github.workspace }}/hip
  ALPAKA_CI_SANITIZERS: ""
  ALPAKA_CI_ANALYSIS: OFF
  ALPAKA_CI_TBB_VERSION: 2021.4.0
  ALPAKA_CI_RUN_TESTS: ON
  alpaka_ACC_CPU_B_SEQ_T_SEQ_ENABLE: ON
  alpaka_ACC_CPU_B_SEQ_T_THREADS_ENABLE: ON
  alpaka_ACC_CPU_B_SEQ_T_FIBERS_ENABLE: ON
  alpaka_ACC_CPU_B_TBB_T_SEQ_ENABLE: ON
  alpaka_ACC_CPU_B_OMP2_T_SEQ_ENABLE: ON
  alpaka_ACC_CPU_B_SEQ_T_OMP2_ENABLE: ON
  alpaka_ACC_ANY_BT_OMP5_ENABLE: OFF
  alpaka_ACC_ANY_BT_OACC_ENABLE: OFF
  alpaka_ACC_GPU_CUDA_ENABLE: OFF
  alpaka_ACC_GPU_CUDA_ONLY_MODE: OFF
  alpaka_ACC_GPU_HIP_ENABLE: OFF
  alpaka_ACC_GPU_HIP_ONLY_MODE: OFF
  CMAKE_INSTALL_PREFIX: ${{ github.workspace }}/_install

jobs:
  clang-format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: DoozyX/clang-format-lint-action@v0.14
      with:
        clangFormatVersion: 14
        exclude: './thirdParty'

  ci:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    env: ${{ matrix.env }}

    strategy:
      fail-fast: false
      matrix:
        include:
        ### Analysis builds
        - name: macos_xcode-13.4.1_debug_analysis
          os: macos-12
          env: {CXX: clang++, CC: clang,  ALPAKA_CI_XCODE_VER: 13.4.1,                              CMAKE_BUILD_TYPE: Debug,   ALPAKA_CI_BOOST_BRANCH: boost-1.74.0,                                                  ALPAKA_CI_ANALYSIS: ON, alpaka_DEBUG: 2,                                                                                                                                                  alpaka_ACC_CPU_B_SEQ_T_FIBERS_ENABLE: OFF, alpaka_ACC_CPU_B_OMP2_T_SEQ_ENABLE: ON, alpaka_ACC_CPU_B_SEQ_T_OMP2_ENABLE: ON, ALPAKA_CI_BUILD_JOBS: 3}
        - name: linux_gcc-12_debug_analysis
          os: ubuntu-22.04
          env: {CXX: g++,     CC: gcc,    ALPAKA_CI_GCC_VER: 12,       ALPAKA_CI_STDLIB: libstdc++, CMAKE_BUILD_TYPE: Debug,   ALPAKA_CI_BOOST_BRANCH: boost-1.79.0, ALPAKA_CI_CMAKE_VER: 3.23.1, OMP_NUM_THREADS: 4, ALPAKA_CI_DOCKER_BASE_IMAGE_NAME: "ubuntu:22.04", ALPAKA_CI_ANALYSIS: ON, alpaka_DEBUG: 2}

        ### macOS
        - name: macos_xcode-13.2.1_debug
          os: macos-11
          env: {CXX: clang++, CC: clang,  ALPAKA_CI_XCODE_VER: 13.2.1,                              CMAKE_BUILD_TYPE: Debug,   ALPAKA_CI_BOOST_BRANCH: boost-1.76.0,                                                  alpaka_CXX_STANDARD: 17,                                                                                                                                                                  alpaka_ACC_CPU_B_SEQ_T_FIBERS_ENABLE: OFF, alpaka_ACC_CPU_B_OMP2_T_SEQ_ENABLE: ON, alpaka_ACC_CPU_B_SEQ_T_OMP2_ENABLE: ON, ALPAKA_CI_BUILD_JOBS: 3}
        - name: macos_xcode-13.4.1_release
          os: macos-12
          env: {CXX: clang++, CC: clang,  ALPAKA_CI_XCODE_VER: 13.4.1,                              CMAKE_BUILD_TYPE: Release, ALPAKA_CI_BOOST_BRANCH: boost-1.79.0,                                                                                                                                                                                                                                            alpaka_ACC_CPU_B_SEQ_T_FIBERS_ENABLE: OFF, alpaka_ACC_CPU_B_OMP2_T_SEQ_ENABLE: ON, alpaka_ACC_CPU_B_SEQ_T_OMP2_ENABLE: ON, ALPAKA_CI_BUILD_JOBS: 3}

        
    steps:
    - name: check filter
      if: (contains(github.event.head_commit.message, 'ci_filter') && !contains(github.event.head_commit.message, matrix.name ))
      run: exit 1
    - uses: actions/checkout@v3
    - name: build + test
      if: (runner.os == 'Windows')
      env:
        ALPAKA_CI_OS_NAME: ${{runner.os}}
      shell: bash
      run: cd ${GITHUB_WORKSPACE} && ./script/ci.sh
    - name: build + test
      if: (runner.os == 'Linux' || runner.os == 'macOS')
      env:
        ALPAKA_CI_OS_NAME: ${{runner.os}}
      run: cd ${GITHUB_WORKSPACE} && ./script/ci.sh
